name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted:"
          gofmt -s -l .
          echo "Run 'make fmt' to fix"
          exit 1
        fi

    - name: Vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./collections/...

    - name: Coverage check
      run: |
        go tool cover -func=coverage.out
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
        echo "Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 85" | bc -l) )); then
          echo "Coverage $COVERAGE% is below 85%"
          exit 1
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out

    # - name: Run benchmarks
    #   timeout-minutes: 5 
    #   run: go test -bench=. -benchmem ./...

    # - name: Run safe benchmarks
    #   run: |
    #     timeout 60s go test -bench=BenchmarkAppend -bench=BenchmarkPrepend -bench=BenchmarkPush -bench=BenchmarkPop -bench=BenchmarkPeek -benchtime=50ms ./collections/ || echo "Benchmarks completed or timed out"

    - name: Build examples
      run: |
        mkdir -p bin
        go build -o bin/linkedlist_demo ./examples/linkedlist/ || echo "LinkedList demo build failed"
        go build -o bin/stack_demo ./examples/stack/ || echo "Stack demo build failed"

    - name: Test examples compile
      run: |
        go build -o /dev/null ./examples/linkedlist/ && echo "✅ LinkedList example compiles"
        go build -o /dev/null ./examples/stack/ && echo "✅ Stack example compiles"


  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  # security:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.24'
    
  #   - name: Run Gosec Security Scanner
  #     run: |
  #       go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
  #       gosec ./...